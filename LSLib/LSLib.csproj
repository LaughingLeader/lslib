<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<OutputType>Library</OutputType>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<PlatformTarget>x64</PlatformTarget>
		<AssemblyTitle>LSLib</AssemblyTitle>
		<Product>LSLib</Product>
		<Copyright>Copyright © Norbyte 2012-2023</Copyright>
		<AssemblyVersion>1.18.5.0</AssemblyVersion>
		<FileVersion>1.18.5.0</FileVersion>
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<DefineConstants>TRACE;DEBUG;EXPORT_GPPG</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DefineConstants>EXPORT_GPPG</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Editor Debug|AnyCPU'">
		<OutputPath>bin\Editor Debug\</OutputPath>
		<DefineConstants>TRACE;EXPORT_GPPG</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Optimize>true</Optimize>
		<PlatformTarget>x86</PlatformTarget>
		<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<ItemGroup>
		<ProjectReference Include="..\LSLibNative\LSLibNative.vcxproj"/>
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="OpenTK.Mathematics" Version="4.8.2" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="lz4net" Version="1.0.15.93" />
		<PackageReference Include="System.IO.Hashing" Version="8.0.0" />
		<PackageReference Include="ZstdSharp.Port" Version="0.7.4" />
	</ItemGroup>

	<Target Name="PreBuildGppgFiles" BeforeTargets="PreBuildEvent">
		<ItemGroup>
			<GpLex Include="..\external\gppg\binaries\GpLex" />
			<Gppg Include="..\external\gppg\binaries\Gppg" />
		</ItemGroup>
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Story\GoalParser\Goal.lex.cs')" Command="@(GpLex) /out:&quot;$(MSBuildProjectDirectory)\LS\Story\GoalParser\Goal.lex.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Story\GoalParser\Goal.lex&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Story\GoalParser\Goal.yy.cs')" Command="@(Gppg) /out:&quot;$(MSBuildProjectDirectory)\LS\Story\GoalParser\Goal.yy.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Story\GoalParser\Goal.yy&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Story\HeaderParser\StoryHeader.lex.cs')" Command="@(GpLex) /out:&quot;$(MSBuildProjectDirectory)\LS\Story\HeaderParser\StoryHeader.lex.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Story\HeaderParser\StoryHeader.lex&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Story\HeaderParser\StoryHeader.yy.cs')" Command="@(Gppg) /out:&quot;$(MSBuildProjectDirectory)\LS\Story\HeaderParser\StoryHeader.yy.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Story\HeaderParser\StoryHeader.yy&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Stats\Parser\Stat.lex.cs')" Command="@(GpLex) /out:&quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\Stat.lex.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\Stat.lex&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Stats\Parser\Stat.yy.cs')" Command="@(Gppg) /out:&quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\Stat.yy.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\Stat.yy&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Stats\Parser\StatProperty.lex.cs')" Command="@(GpLex) /out:&quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatProperty.lex.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatProperty.lex&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Stats\Parser\StatProperty.yy.cs')" Command="@(Gppg) /out:&quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatProperty.yy.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatProperty.yy&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Stats\Parser\StatLua.lex.cs')" Command="@(GpLex) /out:&quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatLua.lex.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatLua.lex&quot;" />
		<Exec Condition="!Exists('$(MSBuildProjectDirectory)\LS\Stats\Parser\StatLua.yy.cs')" Command="@(Gppg) /out:&quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatLua.yy.cs&quot; &quot;$(MSBuildProjectDirectory)\LS\Stats\Parser\StatLua.yy&quot;" />
	</Target>
</Project>